// bower:scss
// endbower

$green: #00a82b;
$yellow: #ffd900;
$red: #b20;


// Sass exponent support
@function exponent($base, $exponent) {
  $value: $base;
  @if $exponent > 1 {
    @for $i from 2 through $exponent {
      $value: $value * $base
    }
  }
  @if $exponent < 1 {
    @for $i from 0 through -$exponent {
      $value: $value / $base
    }
  }
  @return ($value)
}

/* fallback */
.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}
.fallback-message p {
    margin-bottom: 10px;
}
.impress-supported .fallback-message {
    display: none;
}

/*.impress-not-supported*/

body {
	background-color: $green;
	color: #fff;
	font-family: "coquette","lucida grande", tahoma, sans-serif;
	font-size: 60px;
	line-height: 1.6em;
	margin: 0;
	padding: 0;
	text-align: center;
}

p,
ol,
ul,
h1,
h2,
h3,
h4,
h5,
h6 {
	&:first-child {
		margin-top: 0;
	}
	&:last-child {
		margin-bottom: 0;
	}
}

a {
	color: $yellow;
	text-decoration: none;
}

h2 {
	color: $red;
	font-weight: normal;
	line-height: 1em;
}

h3 {
	font-size: 1.1em;
	font-weight: normal;
}

small {
	font-size: 0.6em;
}

.red {
	color: $red;	
}
.yellow {
	color: $yellow;
}

.compressed {
	letter-spacing: -0.06em;
}

.step {
	font-family: "coquette","lucida grande", tahoma, sans-serif;
	padding: 26vh 40px 0;
	
	img.snowflake {
		display: none;
		margin: 26vh 0 0 0;
		width: 120px;
	}
	
	img.snowflake:last-child {
		display: inline-block;
	}
	
	&:last-child {
		margin: 50vh 0;
	}
}

.impress-enabled {
	.step {
		opacity: 0.33;
		transition: opacity, 1s;
		position: relative;
		width: 900px;
		padding: 40px;
		margin: 20px auto;
		
		&.active {
			opacity: 1;
		}
		
		&.info {
			font-size: 38px;
			line-height: normal;
			text-align: left;
				
			img.tree-deco {
				height: auto;
				opacity: 0;
				position: absolute;
				right: 20px;
				top: 95px;
				width: 370px;
				margin-left: -100px;
				
				transition: 800ms all;
				transition-delay: 1500ms;
			}
			
			&.active {
				img.tree-deco {
					right: 0;
					opacity: 1;
				}
			}
		}
	}
	img.snowflake {
		display: inline-block;
		height: auto;
		position: absolute;
		z-index: -1;
	}
	@for $i from 1 through 100 {
		img.snowflake-#{$i} {
			opacity: random(50) * 0.01 + 0.1;
			top: random(1800) - 800 + px;
			left: random(2000) - 800 + px;
			width: 0.5 * exponent(random(30),2) + px;
			transform: rotate((random(20) + deg));
		}	
	}
}



/* HINT */

.hint {
    /*
        We hide the hint until presentation is started and from browsers not supporting
        impress.js, as they will have a linear scrollable view ...
    */
    display: none;

    /*
        ... and give it some fixed position and nice styles.
    */
    position: fixed;
    left: 0;
    right: 0;
    bottom: 20px;

    //background: rgba(0,0,0,0.5);
    text-align: center;

    font-size: 50px;
    padding: 20px;

    z-index: 100;

    /*
        By default we don't want the hint to be visible, so we make it transparent ...
    */
    opacity: 0;

    /*
        ... and position it below the bottom of the screen (relative to it's fixed position)
    */
    transform:         translateY(400px);
	transition:         opacity 1s,         transform 0.5s 1s;
	
	font-size: 0.45em;
	color: $red;
	line-height: 1.1em;
}

/*
    Now we 'enable' the hint when presentation is initialized ...
*/
.impress-enabled .hint { display: block }

/*
    ... and we will show it when the first step (with id 'bored') is active.
*/
.impress-on-step-1 .hint {
    /*
        We remove the transparency and position the hint in its default fixed
        position.
    */
    opacity: 1;
    transform: translateY(0px);
    transition: opacity 1s 5s, transform 0.5s 4.5s;
}